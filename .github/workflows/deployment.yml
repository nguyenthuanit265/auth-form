name: Deploy React App

on:
  push:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE_NAME: nguyenthuanit265/auth-form
  VPS_HOST: ${{ secrets.VPS_HOST }}
  VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install
        
      - name: Build React app
        run: npm run build
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:latest
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
            
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USERNAME }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            # Stop and remove existing container if it exists
            docker stop react-app-container || true
            docker rm react-app-container || true
            
            # Remove old image
            docker rmi ${{ env.DOCKER_IMAGE_NAME }}:latest || true
            
            # Pull latest image
            docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest
            
            # Run new container
            docker run -d \
              --name react-app-container \
              -p 3000:80 \
              --restart unless-stopped \
              ${{ env.DOCKER_IMAGE_NAME }}:latest
